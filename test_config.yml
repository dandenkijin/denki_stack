name: denki_stack
services:
  grafana:
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: raininja
      GF_SECURITY_ADMIN_USER: raininja
    image: grafana/grafana
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: /home/denkijin/workspace/denkisite/denki_stack/grafana/grafana
        target: /etc/grafana/provisioning/datasources
        bind:
          create_host_path: true
  mailserver:
    container_name: mailserver
    hostname: mail.denkijin.com
    image: stalwartlabs/mail-server:latest
    labels:
      traefik.enable: "true"
      traefik.http.routers.mailserver.entrypoints: https
      traefik.http.routers.mailserver.rule: Host(`mail.denkijin.com`) || Host(`autodiscover.denkijin.com`) || Host(`autoconfig.denkijin.com`) || Host(`mta-sts.denkijin.com`)
      traefik.http.routers.mailserver.service: mailserver
      traefik.http.services.mailserver.loadbalancer.server.port: "8080"
      traefik.tcp.routers.imaps.entrypoints: imaps
      traefik.tcp.routers.imaps.rule: HostSNI(`*`)
      traefik.tcp.routers.imaps.service: imaps
      traefik.tcp.routers.imaps.tls.passthrough: "true"
      traefik.tcp.routers.jmap.entrypoints: https
      traefik.tcp.routers.jmap.rule: HostSNI(`*`)
      traefik.tcp.routers.jmap.service: jmap
      traefik.tcp.routers.jmap.tls.passthrough: "true"
      traefik.tcp.routers.smtp.entrypoints: smtp
      traefik.tcp.routers.smtp.rule: HostSNI(`*`)
      traefik.tcp.routers.smtp.service: smtp
      traefik.tcp.routers.smtps.entrypoints: smtps
      traefik.tcp.routers.smtps.rule: HostSNI(`*`)
      traefik.tcp.routers.smtps.service: smtps
      traefik.tcp.routers.smtps.tls.passthrough: "true"
      traefik.tcp.services.imaps.loadbalancer.proxyProtocol.version: "2"
      traefik.tcp.services.imaps.loadbalancer.server.port: "993"
      traefik.tcp.services.jmap.loadbalancer.proxyProtocol.version: "2"
      traefik.tcp.services.jmap.loadbalancer.server.port: "443"
      traefik.tcp.services.smtp.loadbalancer.proxyProtocol.version: "2"
      traefik.tcp.services.smtp.loadbalancer.server.port: "25"
      traefik.tcp.services.smtps.loadbalancer.proxyProtocol.version: "2"
      traefik.tcp.services.smtps.loadbalancer.server.port: "465"
    networks:
      _proxy: {}
    restart: unless-stopped
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: data
        target: /opt/stalwart-mail
        volume: {}
      - type: volume
        source: _certs
        target: /data/certs
        read_only: true
        volume: {}
  prometheus:
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    container_name: prometheus
    image: prom/prometheus
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9090
        published: "9090"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: /home/denkijin/workspace/denkisite/denki_stack/prometheus/prometheus
        target: /etc/prometheus
        bind:
          create_host_path: true
      - type: volume
        source: prom_data
        target: /prometheus
        volume: {}
  traefik:
    container_name: traefik
    image: traefik:v3.2.2
    networks:
      proxy: {}
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "443"
        protocol: tcp
      - mode: ingress
        target: 25
        published: "25"
        protocol: tcp
      - mode: ingress
        target: 465
        published: "465"
        protocol: tcp
      - mode: ingress
        target: 993
        published: "993"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /etc/traefik
        target: /etc/traefik
        bind:
          create_host_path: true
      - type: volume
        source: acme
        target: /etc/certs
        volume: {}
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
        bind:
          create_host_path: true
  traefik-certs-dumper:
    container_name: traefik-certs-dumper
    depends_on:
      traefik:
        condition: service_started
        required: true
    image: ghcr.io/kereis/traefik-certs-dumper:latest
    networks:
      default: null
    restart: unless-stopped
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: acme
        target: /traefik
        read_only: true
        volume: {}
      - type: volume
        source: certs
        target: /output
        volume: {}
networks:
  _proxy:
    name: traefik_proxy
    external: true
  default:
    name: denki_stack_default
  proxy:
    name: denki_stack_proxy
volumes:
  _certs:
    name: traefik_certs
    external: true
  acme:
    name: denki_stack_acme
  certs:
    name: denki_stack_certs
  data:
    name: denki_stack_data
  prom_data:
    name: denki_stack_prom_data
